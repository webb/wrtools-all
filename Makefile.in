#############################################################################
# Don't touch these...
#############################################################################

this_makefile := ${lastword ${MAKEFILE_LIST}}
SHELL = @bash@ -o pipefail -o errexit -o nounset
.SECONDARY:

#############################################################################
# things to set / override
#############################################################################

#HELP:Build for @PACKAGE_NAME@ (@PACKAGE_TARNAME@)

PATH = @PATH@:@abs_builddir@/tmp/all/bin
export PATH

srcdir = @srcdir@
abs_srcdir = @abs_srcdir@
builddir = @builddir@
prefix = @prefix@
PACKAGE_TARNAME = @PACKAGE_TARNAME@

# derived dirs
tmp_dir = @builddir@/tmp
all_dir = ${tmp_dir}/all
packages_build_dir=${tmp_dir}/pkg

# PROGRAMS
# autoconf-standard names
MKDIR_P = @MKDIR_P@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
SED = @SED@
# local names
find = @find@
realpath = @realpath@

config_files = @config_files@ # output files built by configure

packages = wrtools-core saxon-cli xalan-cli schematron-cli xml-schema-validator doc-processing wrtools-git

# if "make" has been run, this will prep for "make install"
ifeq (${all_dir},${wildcard ${all_dir}})
all_files = ${shell ${find} ${all_dir} -type f}
else
all_files =
endif

install_files = ${all_files:${all_dir}/%=${prefix}/%}

#############################################################################
# all
#HELP:Default target is "all". Targets include:
.DEFAULT_GOAL = all

.PHONY: all #   Build everything to a staging directory (default @builddir@/tmp/all)
all: ${packages:%=${packages_build_dir}/%/token-make-install}

#############################################################################
# individual packages

# wrtools-core
.PHONY: wrtools-core
wrtools-core: ${packages_build_dir}/wrtools-core/token-make-install

# saxon-cli
.PHONY: saxon-cli
saxon-cli: ${packages_build_dir}/saxon-cli/token-make-install

${packages_build_dir}/saxon-cli/token-make-install: ${packages_build_dir}/wrtools-core/token-make-install

# xalan-cli
.PHONY: xalan-cli
xalan-cli: ${packages_build_dir}/xalan-cli/token-make-install

${packages_build_dir}/xalan-cli/token-make-install: ${packages_build_dir}/wrtools-core/token-make-install

# schematron-cli
.PHONY: schematron-cli
schematron-cli: ${packages_build_dir}/schematron-cli/token-make-install

${packages_build_dir}/schematron-cli/token-make-install: ${packages_build_dir}/wrtools-core/token-make-install
${packages_build_dir}/schematron-cli/token-make-install: ${packages_build_dir}/saxon-cli/token-make-install
${packages_build_dir}/schematron-cli/token-make-install: ${packages_build_dir}/xalan-cli/token-make-install

${packages_build_dir}/schematron-cli/token-git-init:
	@ echo build $@ custom
	git submodule update --init --recursive schematron-cli
	${MKDIR_P} ${dir $@}
	touch $@

# doc-processing
.PHONY: doc-processing
doc-processing: ${packages_build_dir}/doc-processing/token-make-install

${packages_build_dir}/doc-processing/token-make-install: ${packages_build_dir}/wrtools-core/token-make-install
${packages_build_dir}/doc-processing/token-make-install: ${packages_build_dir}/saxon-cli/token-make-install
${packages_build_dir}/doc-processing/token-make-install: ${packages_build_dir}/xalan-cli/token-make-install
${packages_build_dir}/doc-processing/token-make-install: ${packages_build_dir}/xml-schema-validator/token-make-install

#############################################################################
# fallbacks for all packages
${packages_build_dir}/%/token-make-install: ${packages_build_dir}/%/token-make
	@ echo build $@ from $^ because $?
	make -C ${packages_build_dir}/$*/build install
	${MKDIR_P} ${dir $@}
	touch $@

${packages_build_dir}/%/token-make: ${packages_build_dir}/%/token-configure
	@ echo build $@ from $^ because $?
	${MAKE} -C ${packages_build_dir}/$*/build
	${MKDIR_P} ${dir $@}
	touch $@

${packages_build_dir}/%/token-configure: ${packages_build_dir}/%/token-git-init
	@ echo build $@ from $^ because $?
	${MKDIR_P} ${packages_build_dir}/$*/build
	cd ${packages_build_dir}/$*/build && ${shell ${realpath} ${srcdir}/$*/configure} --prefix=${shell ${realpath} --canonicalize-missing ${all_dir}}
	${MKDIR_P} ${dir $@}
	touch $@

${packages_build_dir}/%/token-git-init:
	@ echo build $@ from $^ because $?
	git submodule update --init $*
	${MKDIR_P} ${dir $@}
	touch $@

#############################################################################
# install
.PHONY: install #   Install all files into target directory (default @prefix@)

install: ${install_files}

# bin stuff is executable
${prefix}/bin/%: ${all_dir}/bin/%
	${MKDIR_P} ${dir $@}
	${INSTALL_PROGRAM} $< $@

# everything else is data
${prefix}/%: ${all_dir}/%
	${MKDIR_P} ${dir $@}
	${INSTALL_DATA} $< $@

#############################################################################
# clean
.PHONY: clean #   Remove regular build products
clean:
	${RM} -r ${tmp_dir}

#############################################################################
# make help: this must be the last target
.PHONY: help #   Print this help
help:
	@ ${SED} -e '/^\.PHONY:/s/^\.PHONY: *\([^ #]*\) *\#\( *\)\([^ ].*\)/\2\1: \3/p;/^[^#]*#HELP:/s/[^#]*#HELP:\(.*\)/\1/p;d' ${this_makefile}

# don't put anything after this
